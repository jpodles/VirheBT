@page "/team"

@using VirheBT.Data.Enums




<Card Margin="Margin.Is4.OnY" WhiteText="false">
    <CardHeader>
        <CardTitle>MY TEAM</CardTitle>
    </CardHeader>
    <CardBody>
        <Card Margin="Margin.Is0.OnY" Padding="Padding.Is0.OnY" Style="border: none">
            <CardBody Padding="Padding.Is0">
                <Row>

                    <Column ColumnSize="ColumnSize.Is1" Padding="Padding.Is2">
                        <CardTitle Alignment="TextAlignment.Right" Size="6">Add employee:</CardTitle>
                    </Column>

                    <Column ColumnSize="ColumnSize.Is4">
                        <Autocomplete TItem="MySelectModel" TValue="string"
                                      Data="@myDdlData"
                                      TextField="@((item)=>item.MyTextField)"
                                      ValueField="@((item)=>item.MyTextField)"
                                      SelectedValue="@selectedSearchValue"
                                      SelectedValueChanged="@MySearchHandler"
                                      Placeholder="Search..." />
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6">
                        <Button Color="Color.Success">
                            <Icon Name="IconName.PlusSquare"></Icon>
                            ADD EMPLOYEE
                        </Button>
                    </Column>
                </Row>



            </CardBody>
        </Card>


        <DataGrid @ref="dataGrid"
                  TItem="UserShortDto"
                  Data="data"
                  Editable="@editable"
                  EditMode="@editMode"
                  Sortable="@sortable"
                  SortMode="@sortMode"
                  Filterable="@filterable"
                  ShowPager="@showPager"
                  SelectionMode="@selectionMode"
                  CommandMode="@commandsMode"
                  PageSize="15"
                  CurrentPage="currentPage"
                  PageChanged="(e) => currentPage = e.Page"
                  PagerPosition="DataGridPagerPosition.TopAndBottom"
                  Striped="false"
                  Bordered="true"
                  Hoverable="true"
                  Responsive="true"
                  Narrow="true">

            <DataGridColumns>
                <DataGridColumn TItem="UserShortDto" Field="@nameof(UserShortDto.ID)" Caption="#" Sortable="true" Width="80px" TextAlignment="TextAlignment.Center" />

                <DataGridColumn TItem="UserShortDto" Field="@nameof(UserShortDto.Name)" Caption="Name" Editable="false" Width="350px">
                    <CaptionTemplate>
                        <Icon Name="IconName.User" /> @context.Caption
                    </CaptionTemplate>

                    <DisplayTemplate>
                        <Link To=@($"project/{context.ID}")>
                        <Card Background="Background.Transparent" Style="height: 40px; border:none">
                            @context.Name
                        </Card>
                        </Link>
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="UserShortDto" Field="@nameof(UserShortDto.Email)" Caption="Email" Editable="false" Width="300px" TextAlignment="TextAlignment.Center" HeaderTextAlignment="TextAlignment.Center" Sortable="true">
                    <CaptionTemplate>
                        <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Envelope" /> @context.Caption
                    </CaptionTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="UserShortDto" Field="@nameof(UserShortDto.UserRole)" Caption="Role" Editable="false" Sortable="false" Width="100px" HeaderTextAlignment="TextAlignment.Center">
                    <CaptionTemplate>
                        <Icon Name="IconName.UserTie" /> @context.Caption
                    </CaptionTemplate>
                    <DisplayTemplate>

                        @{
                            var item = (context as UserShortDto);
                            if (item.UserRole == UserRole.Admin)
                            {
                                <label style="color: darkred"><Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.UserCog" /> <span>@context.UserRole</span></label>
                            }
                            if (item.UserRole == UserRole.Programmer)
                            {
                                <label style="color:green"><Icon Name="IconName.User" /> <span>@context.UserRole</span></label>

                            }
                            if (item.UserRole == UserRole.Tester)
                            {
                                <label style="color: cornflowerblue"><Icon Name="IconName.User" /> <span>@context.UserRole</span></label>

                            }
                            if (item.UserRole == UserRole.ProjectManager)
                            {
                                <label style="color:darkorange"><Icon Name="IconName.UserTie" /> <span>@context.UserRole</span></label>

                            }

                        }
                    </DisplayTemplate>
                    <FilterTemplate>
                        @{
                            var selectedValue = @context.SearchValue ?? "*";
                            <Select TValue="string" SelectedValue="@selectedValue" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                                <SelectItem Value="@("*")">All</SelectItem>
                                @foreach (var item in Enum.GetValues(typeof(UserRole)))
                                {
                                    <SelectItem Value="@item">@item</SelectItem>
                                }
                            </Select>
                        }
                    </FilterTemplate>
                </DataGridColumn>

                <DataGridCommandColumn TItem="UserShortDto" Width="50px" TextAlignment="TextAlignment.Center">
                    <ClearFilterCommandTemplate>
                        <Button Color="Color.Warning" Clicked="@context.Clicked">

                            Clear filter
                        </Button>
                    </ClearFilterCommandTemplate>
                    <DeleteCommandTemplate>
                        <Button Clicked="@context.Clicked" Color="Color.Danger">
                            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Trash" />
                        </Button>
                    </DeleteCommandTemplate>

                    <NewCommandTemplate>
                        <Button Color="Color.Success" Clicked="@context.Clicked" Style="display:none">New</Button>
                    </NewCommandTemplate>
                    <EditCommandTemplate>
                        <Button Color="Color.Primary" Clicked="@context.Clicked" Style="display:none">Edit</Button>
                    </EditCommandTemplate>
                </DataGridCommandColumn>
            </DataGridColumns>
        </DataGrid>

    </CardBody>

</Card>


@code{
    public class MySelectModel
    {
        public int MyValueField { get; set; }
        public string MyTextField { get; set; }
    }

    static string[] Countries = { "Albania", "Andorra", "Armenia", "Austria", "Azerbaijan", "Belarus", "Belgium", "Bosnia & Herzegovina", "Bulgaria", "Croatia", "Cyprus", "Czech Republic", "Denmark", "Estonia", "Finland", "France", "Georgia", "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Kosovo", "Latvia", "Liechtenstein", "Lithuania", "Luxembourg", "Macedonia", "Malta", "Moldova", "Monaco", "Montenegro", "Netherlands", "Norway", "Poland", "Portugal", "Romania", "Russia", "San Marino", "Serbia", "Slovakia", "Slovenia", "Spain", "Sweden", "Switzerland", "Turkey", "Ukraine", "United Kingdom", "Vatican City" };
    IEnumerable<MySelectModel> myDdlData = Enumerable.Range(1, Countries.Length).Select(x => new MySelectModel { MyTextField = Countries[x - 1], MyValueField = x });

    string selectedSearchValue { get; set; }

    void MySearchHandler(string newValue)
    {
        selectedSearchValue = newValue;
    }
}
