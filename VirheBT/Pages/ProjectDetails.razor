@page "/projects/{ProjectId:int}"
@using VirheBT.Shared.Enums
@using VirheBT.Infrastructure.Data.Models
<AuthorizeView>
    <Container Fluid="true" Margin="Margin.Is5.OnY" ElementId="projectDetails">
        <Row Margin="Margin.Is2.OnY" Padding="Padding.Is1.OnY" Style=" margin-bottom: 0px">
            <Column ColumnSize="ColumnSize.Is1">

                <Button Color="Color.Light" Size="Size.Large" Type="ButtonType.Link" To="/projects" Margin="Margin.Is3">
                    <Icon Name="IconName.ArrowLeft">Back</Icon>
                </Button>
            </Column>
            <Column ColumnSize="ColumnSize.Is4">
                <Card Background="Background.Transparent" Style="border: none;">
                    <CardBody>
                        <h3>
                            @Name
                        </h3>
                    </CardBody>
                </Card>
            </Column>
            <Column ColumnSize="ColumnSize.Is4">

            </Column>
            <Column ColumnSize="ColumnSize.Is3" Margin="Margin.Is3.OnY">
                <Button Color="Color.Info" Type="ButtonType.Button" Clicked="@SwitchToProject" Disabled="IsProjectDisabled()"
                        Margin="Margin.Is1">
                    SELECT
                </Button>


                <Button Color="Color.Warning" Type="ButtonType.Link"
                        Margin="Margin.Is1" Clicked="(() => editProjectRef.ShowModal())" Disabled="!CanChange() || IsProjectDisabled()">
                    EDIT
                </Button>
                <Button Color="Color.Danger" Type="ButtonType.Link" Clicked="@OnDeleteProject"
                        Margin="Margin.Is1" Disabled="!CanChange() || IsProjectDisabled()">
                    DELETE
                </Button>

            </Column>
        </Row>
        <Divider Style="margin-top: 0px" Padding="Padding.Is0" />
        <Row>
            <Column ColumnSize="ColumnSize.Is5">
                <Card>
                    <CardHeader>
                        <CardTitle>
                            About
                        </CardTitle>
                    </CardHeader>
                    <CardBody>
                        <Row>
                            <Column ColumnSize="ColumnSize.Is3">
                                <Icon Name="IconName.UserTie"></Icon>
                                Maintainer:
                            </Column>
                            <Column>
                                <Link @onclick="@(() => ShowUserDeatilsModal(MaintainerId))" To="#">
                                @Maintainer
                                </Link>
                            </Column>
                        </Row>
                        <Row>
                            <Column ColumnSize="ColumnSize.Is3">
                                <Icon Name="IconName.CalendarDay"></Icon>
                                Start date:
                            </Column>
                            <Column>
                                @Created
                            </Column>

                        </Row>
                    </CardBody>
                </Card>

                <Card>
                    <CardHeader>
                        <CardTitle>
                            Description
                        </CardTitle>
                    </CardHeader>
                    <CardBody>
                        <CardText>
                            @Description
                        </CardText>
                    </CardBody>
                </Card>

                <Card Margin="Margin.Is3.OnY">
                    <CardHeader>
                        <CardTitle>
                            Tasks In Project
                        </CardTitle>
                    </CardHeader>
                    <CardBody>
                        <Row Class="alert-secondary">
                            <Column>
                                All Tasks:
                            </Column>
                            <Column>
                                @AllTasks
                            </Column>
                        </Row>
                        <Row Class="alert-danger">
                            <Column>
                                To Do:
                            </Column>
                            <Column>
                                @ToDoCount
                            </Column>
                        </Row>

                        <Row Class="alert-info">
                            <Column>
                                In Progress:
                            </Column>
                            <Column>
                                @InProgressCount
                            </Column>
                        </Row>
                        <Row Class="alert-success">
                            <Column>
                                Done:
                            </Column>
                            <Column>
                                @DoneCount
                            </Column>
                        </Row>
                    </CardBody>
                </Card>
            </Column>
            <Column ColumnSize="ColumnSize.Is7">
                <Card>
                    <CardHeader>
                        <CardTitle>Employees in current project</CardTitle>
                    </CardHeader>
                    <CardBody>
                        <DataGrid @ref="dataGrid" TItem="ApplicationUserDto" Data="Team" Editable="@editable" EditMode="@editMode"
                                  Sortable="@sortable" SortMode="@sortMode" Filterable="@filterable" ShowPager="@showPager"
                                  SelectionMode="@selectionMode" CommandMode="@commandsMode" PageSize="15" CurrentPage="currentPage"
                                  PageChanged="(e) => currentPage = e.Page" PagerPosition="DataGridPagerPosition.Bottom"
                                  Striped="false" Bordered="true" Hoverable="true" Responsive="true" Narrow="true">

                            <DataGridColumns>
                                <DataGridColumn TItem="ApplicationUserDto" Field="@nameof(ApplicationUserDto.Email)" Caption="Email"
                                                Editable="false" TextAlignment="TextAlignment.Center"
                                                HeaderTextAlignment="TextAlignment.Center" Sortable="true">
                                    <CaptionTemplate Context="dataGridContext">
                                        <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Envelope" /> @dataGridContext.Caption
                                    </CaptionTemplate>
                                    <DisplayTemplate Context="user">
                                        <Link To="#" @onclick="@(() => ShowUserDeatilsModal(user.Id))" Style="text-decoration: none">
                                        <Card Background="Background.Transparent" Style="height: 40px; border:none">
                                            @user.FirstName @user.LastName
                                        </Card>
                                        </Link>
                                    </DisplayTemplate>
                                </DataGridColumn>

                                <DataGridColumn TItem="ApplicationUserDto" Field="@nameof(ApplicationUserDto.UserRole)" Caption="Role"
                                                Editable="false" Sortable="false" HeaderTextAlignment="TextAlignment.Center"
                                                TextAlignment="TextAlignment.Center">
                                    <CaptionTemplate Context="dataGridContext">
                                        <Icon Name="IconName.UserTie" /> @dataGridContext.Caption
                                    </CaptionTemplate>
                                    <DisplayTemplate Context="dataGridContext">
                                        <Link To="#" @onclick="@(() => ShowUserDeatilsModal(dataGridContext.Id))" Style="text-decoration: none">
                                        <Card Background="Background.Transparent" Style="height: 40px; border:none">
                                            @{
                                                var item = (dataGridContext as ApplicationUserDto);
                                                if (item.UserRole == UserRole.Admin)
                                                {
                                                    <label style="color: darkred">
                                                        <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.UserCog" />
                                                        <span>@dataGridContext.UserRole</span>
                                                    </label>
                                                }
                                                if (item.UserRole == UserRole.Programmer)
                                                {
                                                    <label style="color:green">
                                                        <Icon Name="IconName.User" /> <span>@dataGridContext.UserRole</span>
                                                    </label>

                                                }
                                                if (item.UserRole == UserRole.Tester)
                                                {
                                                    <label style="color: cornflowerblue">
                                                        <Icon Name="IconName.User" /> <span>@dataGridContext.UserRole</span>
                                                    </label>

                                                }
                                                if (item.UserRole == UserRole.ProjectManager)
                                                {
                                                    <label style="color:darkorange">
                                                        <Icon Name="IconName.UserTie" /> <span>@dataGridContext.UserRole</span>
                                                    </label>

                                                }

                                            }
                                        </Card>
                                            </Link>
                                    </DisplayTemplate>
                                    <FilterTemplate Context="filterContext">
                                        @{
                                            var selectedValue = filterContext.SearchValue ?? "*";
                                            <Select TValue="string" SelectedValue="@selectedValue.ToString()"
                                                    SelectedValueChanged="@(e => filterContext.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                                                <SelectItem Value="@("*")">All</SelectItem>
                                                @foreach (var item in Enum.GetValues(typeof(UserRole)))
                                                {
                                                    <SelectItem Value="@item">@item</SelectItem>
                                                }
                                            </Select>
                                        }
                                    </FilterTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                        </DataGrid>
                    </CardBody>
                </Card>
            </Column>
        </Row>

    </Container>
</AuthorizeView>

<EditProject @ref="editProjectRef" ProjectId="ProjectId"></EditProject>
<UserDetails @ref="userDetailsRef" UserId="@userDetailsId"></UserDetails>

@code {
    EditProject editProjectRef;
    UserDetails userDetailsRef;

    public string userDetailsId;
    public void ShowUserDeatilsModal(string userId)
    {
        userDetailsId = userId;
        userDetailsRef.ShowModal(userId);

    }

}



