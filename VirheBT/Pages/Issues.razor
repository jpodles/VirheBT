@page "/project/{ProjectId:int}/issues"
@using VirheBT.Shared.Enums
@using VirheBT.Infrastructure.Data.Models

<Card Margin="Margin.Is4.OnY" WhiteText="false">
    <CardHeader>
        <CardTitle>Issues</CardTitle>
    </CardHeader>
    <CardBody>
        <DataGrid @ref="dataGrid"
                  TItem="Issue"
                  Data="issues"
                  Editable="@editable"
                  EditMode="@editMode"
                  Sortable="@sortable"
                  SortMode="@sortMode"
                  Filterable="@filterable"
                  ShowPager="@showPager"
                  SelectionMode="@selectionMode"
                  CommandMode="@commandsMode"
                  PageSize="10"
                  CurrentPage="currentPage"
                  PageChanged="(e) => currentPage = e.Page"
                  PagerPosition="DataGridPagerPosition.TopAndBottom"
                  Striped="false"
                  Bordered="true"
                  Hoverable="true"
                  Responsive="true"
                  Narrow="true"
                  RowRemoved="@OnRowRemoved">

            <DataGridColumns>
                <DataGridMultiSelectColumn TItem="Issue" Width="15px">

                    @*<MultiSelectTemplate>
                            <Label @onclick:stopPropagation>
                                <Check TValue="bool" Checked="@context.IsSelected" Indeterminate="@context.IsIndeterminate" CheckedChanged="@context.SelectedChanged" @onclick:stopPropagation></Check>
                            </Label>
                        </MultiSelectTemplate>*@
                </DataGridMultiSelectColumn>
                <DataGridColumn TItem="Issue" Field="@nameof(Issue.IssueId)" Caption="#" Sortable="true" Width="80px" TextAlignment="TextAlignment.Center" />

                <DataGridColumn TItem="Issue" Field="@nameof(Issue.Title)" Caption="Title" Editable="false" Width="500px">
                    <CaptionTemplate>
                        <Icon Name="IconName.Tag" /> @context.Caption
                    </CaptionTemplate>

                    <DisplayTemplate>


                        <Link To=@($"project/{ProjectId}/issue/{context.IssueId}")>
                        <Card Background="Background.Transparent" Style="height: 40px; border:none">

                            @context.Title

                        </Card>
                        </Link>

                    </DisplayTemplate>

                </DataGridColumn>

                <DataGridColumn TItem="Issue" Field="@nameof(Issue.AssignedTo)" Caption="Assigned To" Editable="false" Width="300px" TextAlignment="TextAlignment.Center" HeaderTextAlignment="TextAlignment.Center" Sortable="true">
                    <CaptionTemplate>
                        <Icon Name="IconName.UserCheck" /> @context.Caption
                    </CaptionTemplate>
                    <FilterTemplate>
                        @{
                            var selectedValue = @context.SearchValue ?? "*";
                            <Select TValue="string" SelectedValue="@selectedValue" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                                <SelectItem Value="@("michałek")">ME</SelectItem>
                                <SelectItem Value="@("*")">All</SelectItem>


                                @foreach (var item in issues.Select(p => p.AssignedTo).Distinct())
                                {
                                    <SelectItem Value="@item">@item</SelectItem>
                                }

                            </Select>
                        }
                    </FilterTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="Issue" Field="@nameof(Issue.Type)" Caption="Type" Editable="false" Width="100px" Sortable="false" HeaderTextAlignment="TextAlignment.Center">
                    <CaptionTemplate>
                        <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Robot" /> @context.Caption
                    </CaptionTemplate>
                    <DisplayTemplate>

                        @{
                            var issueItem = (context as Issue);
                            if (issueItem.Type == IssueType.Feature)
                            {
                                <label style="color:forestgreen"><Icon Name="IconName.PlusCircle" /> <span>@context.Type</span></label>

                            }
                            else
                            {
                                <label style="color:red"><Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Bug" /> <span>@context.Type</span></label>

                            }

                        }
                    </DisplayTemplate>
                    <FilterTemplate>
                        @{
                            var selectedValue = @context.SearchValue ?? "*";
                            <Select TValue="string" SelectedValue="@selectedValue" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                                <SelectItem Value="@("*")">All</SelectItem>
                                @foreach (var item in Enum.GetValues(typeof(IssueType)))
                                {
                                    <SelectItem Value="@item">@item</SelectItem>
                                }
                            </Select>
                        }
                    </FilterTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="Issue" Field="@nameof(Issue.Priority)" Caption="Priority" Editable="false" Sortable="false" Width="100px" HeaderTextAlignment="TextAlignment.Center">
                    <CaptionTemplate>
                        <Icon Name="IconName.ExclamationTriangle" /> @context.Caption
                    </CaptionTemplate>
                    <DisplayTemplate>

                        @{
                            var issueItem = (context as Issue);
                            if (issueItem.Priority == IssuePriority.Low)
                            {
                                <label style="color:darkgreen"><Icon Name="IconName.ArrowUp" /> <span>@context.Priority</span></label>

                            }
                            if (issueItem.Priority == IssuePriority.Normal)
                            {
                                <label style="color:orange"><Icon Name="IconName.ArrowUp" /> <span>@context.Priority</span></label>

                            }
                            if (issueItem.Priority == IssuePriority.High)
                            {
                                <label style="color:red"><Icon Name="IconName.ArrowUp" /> <span>@context.Priority</span></label>

                            }

                        }
                    </DisplayTemplate>
                    <FilterTemplate>
                        @{
                            var selectedValue = @context.SearchValue ?? "*";
                            <Select TValue="string" SelectedValue="@selectedValue" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                                <SelectItem Value="@("*")">All</SelectItem>
                                @foreach (var item in Enum.GetValues(typeof(IssuePriority)))
                                {
                                    <SelectItem Value="@item">@item</SelectItem>
                                }
                            </Select>
                        }
                    </FilterTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="Issue" Field="@nameof(Issue.Status)" Caption="Status" Editable="false" Sortable="false" Width="100px" HeaderTextAlignment="TextAlignment.Center">
                    <CaptionTemplate>
                        <Icon Name="IconName.Compass" /> @context.Caption
                    </CaptionTemplate>
                    <DisplayTemplate>

                        @{
                            var issueItem = (context as Issue);
                            if (issueItem.Status == IssueStatus.ToDo)
                            {
                                <label style="color:darkred"><Icon Name="IconName.ExclamationTriangle" /> <span>@context.Status</span></label>

                            }
                            if (issueItem.Status == IssueStatus.InProgress)
                            {
                                <label style="color:cornflowerblue"><Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Spinner" /> <span>@context.Status</span></label>

                            }
                            if (issueItem.Status == IssueStatus.Done)
                            {
                                <label style="color:green"><Icon Name="IconName.CheckCircle" /> <span>@context.Status</span></label>

                            }

                        }


                    </DisplayTemplate>

                    <FilterTemplate>
                        @{
                            var selectedValue = @context.SearchValue ?? "*";
                            <Select TValue="string" SelectedValue="@selectedValue" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                                <SelectItem Value="@("*")">All</SelectItem>
                                @foreach (var item in Enum.GetValues(typeof(IssueStatus)))
                                {
                                    <SelectItem Value="@item">@item</SelectItem>
                                }
                            </Select>
                        }
                    </FilterTemplate>

                </DataGridColumn>

                <DataGridCommandColumn TItem="Issue" Width="87px" TextAlignment="TextAlignment.Center">
                    <ClearFilterCommandTemplate>
                        <Button Color="Color.Warning" Clicked="@context.Clicked">
                            Clear filter
                        </Button>
                    </ClearFilterCommandTemplate>
                    <DeleteCommandTemplate>
                        <Button Clicked="@context.Clicked" Color="Color.Danger">
                            <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.Trash" />
                        </Button>
                    </DeleteCommandTemplate>

                    <NewCommandTemplate>
                        <Button Color="Color.Success" Clicked="@context.Clicked" Style="display:none">New</Button>
                    </NewCommandTemplate>
                    <EditCommandTemplate>
                        <Button Color="Color.Primary" Clicked="@context.Clicked" Style="display:none">Edit</Button>
                    </EditCommandTemplate>


                </DataGridCommandColumn>

            </DataGridColumns>
        </DataGrid>

    </CardBody>
</Card>